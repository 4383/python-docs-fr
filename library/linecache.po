# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2016, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-10-30 10:44+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../Doc/library/linecache.rst:3
msgid ":mod:`linecache` --- Random access to text lines"
msgstr ":mod:`linecache` --- Accès direct aux lignes d'un texte"

#: ../Doc/library/linecache.rst:9
msgid "**Source code:** :source:`Lib/linecache.py`"
msgstr "**Code source :** :source:`Lib/linecache.py`"

#: ../Doc/library/linecache.rst:13
msgid ""
"The :mod:`linecache` module allows one to get any line from any file, while "
"attempting to optimize internally, using a cache, the common case where many "
"lines are read from a single file.  This is used by the :mod:`traceback` "
"module to retrieve source lines for inclusion in  the formatted traceback."
msgstr ""

#: ../Doc/library/linecache.rst:18
msgid "The :mod:`linecache` module defines the following functions:"
msgstr "Le module :mod:`linecache` définit les fonctions suivantes :"

#: ../Doc/library/linecache.rst:23
msgid ""
"Get line *lineno* from file named *filename*. This function will never raise "
"an exception --- it will return ``''`` on errors (the terminating newline "
"character will be included for lines that are found)."
msgstr ""
"Récupère la ligne *lineno* du fichier *filename*.  Cette fonction ne lévera "
"jamais d'exception, elle préfèrera renvoyer ``''`` en cas d'erreur (le "
"caractère de retour à la ligne sera inclu pour les lignes existantes)."

#: ../Doc/library/linecache.rst:29
msgid ""
"If a file named *filename* is not found, the function will look for it in "
"the module search path, ``sys.path``, after first checking for a :pep:`302` "
"``__loader__`` in *module_globals*, in case the module was imported from a "
"zipfile or other non-filesystem import source."
msgstr ""
"Si le fichier *filename* n'est pas trouvé, la fonction le cherchera dans les "
"chemins de recherche de modules, ``sys.path`, après avoir vérifié si un "
"``__loader__`` (de la :pep:`302`) se trouve dans *module_globals*, dans le "
"cas où le module a été importé depuis un fichier zip, ou une autre source "
"hors du système de fichier."

#: ../Doc/library/linecache.rst:34
msgid "The *module_globals* parameter was added."
msgstr ""

#: ../Doc/library/linecache.rst:40
msgid ""
"Clear the cache.  Use this function if you no longer need lines from files "
"previously read using :func:`getline`."
msgstr ""
"Nettoie le cache. Utilisez cette fonction si vous n'avez plus besoin des "
"lignes des fichiers précédement lus via :func:`getline`."

#: ../Doc/library/linecache.rst:46
msgid ""
"Check the cache for validity.  Use this function if files in the cache  may "
"have changed on disk, and you require the updated version.  If *filename* is "
"omitted, it will check all the entries in the cache."
msgstr ""
"Vérifie la validité du cache. Utilisez cette fonction si les fichiers du "
"cache pourraient avoir changé sur le disque, et que vous en voudriez une "
"version à jour. Sans *filename*, toutes les entrées du cache seront "
"vérifiées."

#: ../Doc/library/linecache.rst:50
msgid "Example::"
msgstr "Exemples ::"
