# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2016, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-10-30 10:44+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../Doc/library/posix.rst:2
msgid ":mod:`posix` --- The most common POSIX system calls"
msgstr ":mod:`posix` --- Les appels système POSIX les plus courants"

#: ../Doc/library/posix.rst:9
msgid ""
"This module provides access to operating system functionality that is "
"standardized by the C Standard and the POSIX standard (a thinly disguised "
"Unix interface)."
msgstr ""
"Ce module permet d'accéder aux fonctionnalités du système d'exploitation "
"normalisés par le Standard C et le Standard POSIX (une interface Unix "
"habilement déguisée)."

#: ../Doc/library/posix.rst:15
msgid ""
"**Do not import this module directly.**  Instead, import the module :mod:"
"`os`, which provides a *portable* version of this interface.  On Unix, the :"
"mod:`os` module provides a superset of the :mod:`posix` interface.  On non-"
"Unix operating systems the :mod:`posix` module is not available, but a "
"subset is always available through the :mod:`os` interface.  Once :mod:`os` "
"is imported, there is *no* performance penalty in using it instead of :mod:"
"`posix`.  In addition, :mod:`os` provides some additional functionality, "
"such as automatically calling :func:`~os.putenv` when an entry in ``os."
"environ`` is changed."
msgstr ""
"**Ne pas importer ce module directement.**  À la place, importer le module :"
"mod:`os`, qui fournit une version *portable* de cette interface. Sous Unix, "
"le module :mod:`os` fournit un sur-ensemble de l'interface :mod:`posix`.  "
"Sous les systèmes d'exploitation non Unix le module :mod:`posix` n'est pas "
"disponible, mais un sous ensemble est toujours disponible via l'interface :"
"mod:`os`. Une fois que :mod:`os` est importé, il n'y a aucune perte de "
"performance à l'utiliser à la place de :mod:`posix`.  De plus, :mod:`os` "
"fournit des fonctionnalités supplémentaires, telles que l'appel automatique "
"de :func:`~os.putenv` lorsqu'une entrée dans ``os.environ`` est modifiée."

#: ../Doc/library/posix.rst:24
msgid ""
"Errors are reported as exceptions; the usual exceptions are given for type "
"errors, while errors reported by the system calls raise :exc:`OSError`."
msgstr ""
"Les erreurs sont signalées comme des exceptions; les exceptions habituelles "
"sont données pour les erreurs de type, tandis que les erreurs signalées par "
"les appels système lèvent une erreur :exc:`OSError`."

#: ../Doc/library/posix.rst:31
msgid "Large File Support"
msgstr "Prise en charge de gros fichiers"

#: ../Doc/library/posix.rst:39
msgid ""
"Several operating systems (including AIX, HP-UX, Irix and Solaris) provide "
"support for files that are larger than 2 GB from a C programming model "
"where :c:type:`int` and :c:type:`long` are 32-bit values. This is typically "
"accomplished by defining the relevant size and offset types as 64-bit "
"values. Such files are sometimes referred to as :dfn:`large files`."
msgstr ""

#: ../Doc/library/posix.rst:45
msgid ""
"Large file support is enabled in Python when the size of an :c:type:`off_t` "
"is larger than a :c:type:`long` and the :c:type:`long long` type is "
"available and is at least as large as an :c:type:`off_t`. Python longs are "
"then used to represent file sizes, offsets and other values that can exceed "
"the range of a Python int. It may be necessary to configure and compile "
"Python with certain compiler flags to enable this mode. For example, it is "
"enabled by default with recent versions of Irix, but with Solaris 2.6 and "
"2.7 you need to do something like::"
msgstr ""

#: ../Doc/library/posix.rst:56
msgid "On large-file-capable Linux systems, this might work::"
msgstr ""
"Sur les systèmes Linux capable de supporter les fichiers volumineux, cela "
"pourrait fonctionner:"

#: ../Doc/library/posix.rst:65
msgid "Notable Module Contents"
msgstr "Contenu du Module"

#: ../Doc/library/posix.rst:67
msgid ""
"In addition to many functions described in the :mod:`os` module "
"documentation, :mod:`posix` defines the following data item:"
msgstr ""
"En plus des nombreuses fonctions décrites dans la documentation du module :"
"mod:`os`, :mod:`posix` possède les éléments suivants:"

#: ../Doc/library/posix.rst:72
msgid ""
"A dictionary representing the string environment at the time the interpreter "
"was started.  For example, ``environ['HOME']`` is the pathname of your home "
"directory, equivalent to ``getenv(\"HOME\")`` in C."
msgstr ""

#: ../Doc/library/posix.rst:76
msgid ""
"Modifying this dictionary does not affect the string environment passed on "
"by :func:`~os.execv`, :func:`~os.popen` or :func:`~os.system`; if you need "
"to change the environment, pass ``environ`` to :func:`~os.execve` or add "
"variable assignments and export statements to the command string for :func:"
"`~os.system` or :func:`~os.popen`."
msgstr ""
"Modifier ce dictionnaire n'affecte pas les variables d'environnements "
"fournis par :func:`~os.execv`, :func:`~os.popen` ou :func:`~os.system`; Si "
"vous avez besoin de changer l'environnement, passer le paramètre ``environ`` "
"à :func:`~os.execve` ou ajouter les assignations de variables et les "
"*export* à la commande à exécuter via :func:`~os.system` ou :func:`~os."
"popen`."

#: ../Doc/library/posix.rst:84
msgid ""
"The :mod:`os` module provides an alternate implementation of ``environ`` "
"which updates the environment on modification.  Note also that updating ``os."
"environ`` will render this dictionary obsolete.  Use of the :mod:`os` module "
"version of this is recommended over direct access to the :mod:`posix` module."
msgstr ""
