# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2016, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 2.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-10-30 10:44+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../Doc/library/pty.rst:3
msgid ":mod:`pty` --- Pseudo-terminal utilities"
msgstr ":mod:`pty` --- Outils de manipulation de pseudo-terminaux"

#: ../Doc/library/pty.rst:12
msgid ""
"The :mod:`pty` module defines operations for handling the pseudo-terminal "
"concept: starting another process and being able to write to and read from "
"its controlling terminal programmatically."
msgstr ""
"Le module :mod:`pty` expose des fonctions de manipulation de pseudo-"
"terminaux, il permet d'écrire un programme capable de démarrer un autre "
"processus, d'écrire et de lire depuis son terminal."

#: ../Doc/library/pty.rst:16
msgid ""
"Because pseudo-terminal handling is highly platform dependent, there is code "
"to do it only for Linux. (The Linux code is supposed to work on other "
"platforms, but hasn't been tested yet.)"
msgstr ""
"La gestion de pseudo-terminaux étant très dépendante de la plateforme, ce "
"code ne gère que Linux. (Code supposé fonctionner sur d'autres plateformes, "
"mais sans avoir été testé)."

#: ../Doc/library/pty.rst:20
msgid "The :mod:`pty` module defines the following functions:"
msgstr "Le module :mod:`pty` expose les fonctions suivantes :"

#: ../Doc/library/pty.rst:25
msgid ""
"Fork. Connect the child's controlling terminal to a pseudo-terminal. Return "
"value is ``(pid, fd)``. Note that the child  gets *pid* 0, and the *fd* is "
"*invalid*. The parent's return value is the *pid* of the child, and *fd* is "
"a file descriptor connected to the child's controlling terminal (and also to "
"the child's standard input and output)."
msgstr ""
"*Fork*. Connecte le terminal contrôlé par le fils à un pseudo-terminal. La "
"valeur renvoyée est ``(pid, fd)``. Notez que le fils obtient ``0`` comme "
"*pid* et un *fd* non valide. Le parent obtient le *pid* du fils, et *fd* un "
"descripteur de fichier connecté à un terminal contrôlé par le fils (et donc "
"à l'entrée et la sortie standard du fils)."

#: ../Doc/library/pty.rst:34
msgid ""
"Open a new pseudo-terminal pair, using :func:`os.openpty` if possible, or "
"emulation code for generic Unix systems. Return a pair of file descriptors "
"``(master, slave)``, for the master and the slave end, respectively."
msgstr ""
"Ouvre une nouvelle paire de pseudo-terminaux, en utilisant si possible :func:"
"`os.openpty`, ou du code émulant la fonctionnalité pour des systèmes Unix "
"génériques. Renvoie une paire de descripteurs de fichier ``(master, "
"slave)``, pour le maître et pour l'esclave respectivement."

#: ../Doc/library/pty.rst:41
msgid ""
"Spawn a process, and connect its controlling terminal with the current "
"process's standard io. This is often used to baffle programs which insist on "
"reading from the controlling terminal."
msgstr ""
"Crée un nouveau processus et connecte son terminal aux entrées/sorties "
"standard du processus courant.  C'est typiquement utilisé pour duper les "
"programmes insistant sur le fait de lire depuis leur terminal."

#: ../Doc/library/pty.rst:45
msgid ""
"The functions *master_read* and *stdin_read* should be functions which read "
"from a file descriptor. The defaults try to read 1024 bytes each time they "
"are called."
msgstr ""
"Les fonctions *master_read* et *stdin_read* doivent être des fonctions "
"lisant sur un descripteur de fichier. Par défaut elles lisent 1024 octets à "
"chaque fois qu'elles sont appelées."
